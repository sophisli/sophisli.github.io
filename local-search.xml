<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>love</title>
    <link href="/sophisli.github.io/2021/04/11/love/"/>
    <url>/sophisli.github.io/2021/04/11/love/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e37d1dd7ad184017bd043c56a3245bb8eb5c17c3265b7687dad4e468d918af76">148036ef7ff7074153adb0dcbe0701c3ea93c2fee5d636fc0a922545074dba182788f18522bb21fb15edcb9494105dfa6596a48841d0a62601fcdb8194aeefb6e36d3bc6ef9a8ec69fb0349e8ce437082718b724aa3eb90feb214f9ddd3d6238e96d2f581a6661acccf400637dc1a28cfc24c73f7c4b281ff7cacadde062f3ee65ebf61a37b64c346e48dbfb3b5dc6aad8eddb9136c45454cbe68db7c8025f8fef329ebfccf88de1fc1c81efaa7dc73eb42dce65b38bcdc5880539cac95bc2f0f1708c4b481785ddcc14ba0be6107f91acc9ac3729a0cb19ab4618c2319e9c69173a3d995d4f8bec36b7a235bf943aa9a76bd28b34d4a2141e0f6025f2a0fd36ef5e64735796aca2cbc01882b25ac679f512342390662a6fd509a990f36f9605712850060d13265ae8b5643f27b57471e236711b206a1b8378cfc2d5c45d8e2ec52b0affaa42823ba23018afb32844bf9e56c22ee5f72360d8951552f12d3d2450ef669b2d5d1ede2a6ce40a7628afcf1022aa7c63f66f8fb7f14db447cb6d9f87dd2d5203a84fb3d27c18be13aa58d886615e2f911bf598be9d20e8ebeda34b4eb2b676ba9ac352df355e4c5f0e82a044f80e3bc874a09bb014fe574e4b33b2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/sophisli.github.io/lib/hbe.js"></script><link href="/sophisli.github.io/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>可控核聚变展望</title>
    <link href="/sophisli.github.io/2021/04/11/%E5%8F%AF%E6%8E%A7%E6%A0%B8%E8%81%9A%E5%8F%98%E5%B1%95%E6%9C%9B/"/>
    <url>/sophisli.github.io/2021/04/11/%E5%8F%AF%E6%8E%A7%E6%A0%B8%E8%81%9A%E5%8F%98%E5%B1%95%E6%9C%9B/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\sophisli.github.io\assets\css\APlayer.min.css"><script src="\sophisli.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\sophisli.github.io\assets\js\Meting.min.js"></script><h1 id="一则科技新闻引发的讨论"><a href="#一则科技新闻引发的讨论" class="headerlink" title="一则科技新闻引发的讨论"></a>一则科技新闻引发的讨论</h1><p> 今天看到微信公众号的<a href="https://mp.weixin.qq.com/s/Q4eMa3RJZKQAWoQYeMimpw">一则报道</a>，巧合的是昨天还想了想托卡马克线圈结构的作用，联系到最近回形针的<a href="https://mp.weixin.qq.com/s/z7X3P09zHggwvL_zd4VK5g">视频</a>，有必要说一说可控核聚变的问题。实际上可控核聚变涉及的问题主要在工程技术和材料上的，关于它的理论不过是经典电磁学加狭义相对论的范畴。基本上实现的方式就三种，引力约束大家天天见，惯性约束就是用激光的光子动量把轻核硬挤在一起发生聚变，一般激光用作可控核聚变的点火装置，最后就是也最有希望的就是磁约束，用电磁线圈生成一个磁力紧箍咒。作为中国可控核聚变设备的首选磁约束构型，托卡马克装置主要的构造是三种磁控线圈和一个真空腔室。</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(128,128,128,.08);"     src="https://cdn.jsdelivr.net/gh/sophisli/picdomain/img/20210412132401.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">EAST东方超环的红色等离子体。图源WiKi</div> </center><p>三种线圈包括生成环形磁场（安培环路定理）绕腔室的线圈、生成极化磁场以及等离子电流感应电动势的感应线圈（类似于变压器的结构），还有就是控制磁场不均匀导致的粒子漂移和高温粒子相互作用下扩散作用的平行环绕腔室的线圈。第一种线圈一般是超导材料构成，因为需要生成非常强的磁场才能把上亿度高温约束到环形的腔室中；感应线圈兼具控制腔室磁力线分布和加热击穿等离子体的作用，产生的是变化的磁场；平行腔室的线圈对产生的磁场强度要求最小。<img src="https://cdn.jsdelivr.net/gh/sophisli/picdomain/img/20210412161050.png" alt="环形磁场和极化磁场叠加形成螺旋磁场"></p><p>公众号这个文章里面提到关于可控核聚变实现的另一个技术难点，就是聚变过程产生中子的问题，这东西不带电，没法进行磁约束，普通材料被密集中子轰击只会秒变豆腐渣，一般用和中子不亲和的铪锆等元素构造的腔室可以勉强与之一战。</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(128,128,128,.08);"     src="https://cdn.jsdelivr.net/gh/sophisli/picdomain/img/20210412153503.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">托卡马克的线圈和环形腔室的结构。图源WiKi</div> </center><p>这种构造决定了托卡马克很难实现小型化。另一种可控核聚变的实现装置，所谓仿星器，在小型化上就非常有优势，只不过扎花一样的结构决定了在工程实施上的难度，而且控制上的要求更为严格，仿星器不需要感应线圈产生等离子电流，在安全要素上要比托卡马克好很多，但是技术问题相对托卡马克还是太多。</p><p>可控核聚变原料最为重要的就是氘，这东西地球到处都是，但是纯氘的核聚变温度要求更高，所以才会有氘氚混合型和氘氦3型，氚丰度就相对更稀少，它是一种放射性元素，一般核电站压水堆轻水堆会产生，这次日本倾倒的核废水中主要就是氚超标。可控核聚变能实现能效比q＞1，就能抵消点火运行聚变装置消耗的能量，这个ITER预想是做到q=10的程度，不过拖拖踏踏，情况似乎并不乐观。想象一下，在托卡马克巨大的真空腔室中漂浮环绕着比太阳还要耀眼热烈的等离子电浆，一旦启动便可像永动机一样运转，集热器可以源源不断地贪婪地在这电光火石中攫取自然无穷的能量，那一定是人类有史以来最伟大的杰作。民用可控核聚变依赖室温超导体的实现，很多新型的聚变装置也都需要更好的超导材料，所以室温超导是凝聚态材料领域的皇冠，人类命运之所系，室温超导实现之日，便是真正意义上的普罗米修斯盗取天火之时。<br>可控核聚变能不能实现关乎下一个一百年人类的命运，离我们并不遥远，所以这事以后热度会越来越高。</p>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Future</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Feynman diagram</title>
    <link href="/sophisli.github.io/2021/04/06/Feynman-diagram/"/>
    <url>/sophisli.github.io/2021/04/06/Feynman-diagram/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\sophisli.github.io\assets\css\APlayer.min.css"><script src="\sophisli.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\sophisli.github.io\assets\js\Meting.min.js"></script><h1 id="latex两种费曼图绘制方法"><a href="#latex两种费曼图绘制方法" class="headerlink" title="latex两种费曼图绘制方法"></a>latex两种费曼图绘制方法</h1><p>有必要根据自己的摸索介绍一下latex关于费曼图的绘制方法。Tex排版环境上关于费曼图的绘制有着成熟的解决方案，比如古老的FeynMF/FeynMP或者Axodraw，尤其对于后者，还有可视化绘制工具JaxoDraw。但是二者因为复杂的交互和语法，存在各种痛点，本文旨在引入TiKz-Feynhand费曼图绘制，<strong>讲一讲在latex中费曼图绘制的内在逻辑，以方便有需要者更为便捷的选择，省去探索试错的学习成本</strong>。作为对比，这里介绍2016年更新的AxoDraw2绘制费曼图的方式（FeynMF/FeynMPF过于老旧，这里不做推荐）。  </p><p>两种方式Bubble圈图的语法：</p><p><strong>AxoDraw2</strong></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;axopicture&#125;(400,60)<span class="hljs-comment">%设置画布大小</span><br><span class="hljs-keyword">\AxoGrid</span>(0,0)(10,10)(20,10)&#123;LightGray&#125;&#123;0.5&#125;<span class="hljs-comment">%网格绘制，给画布绘制坐标，方便绘图定位。其中两边的括号定义起始位置，是画布定义之后之于画布的绝对位置，中间括号定义网格单元，花括号分别定义颜色样式和网格线条粗细。</span><br> <span class="hljs-keyword">\SetWidth</span>&#123;1.0&#125;<br>    <span class="hljs-keyword">\SetColor</span>&#123;Black&#125;<br>    <span class="hljs-keyword">\Line</span>[arrow](0,0)(200,100)<br> <span class="hljs-keyword">\Arc</span>[arrow,arrowpos=0.5,arrowlength=5,arrowwidth=2,arrowinset=0.2](85,-20)(40,30,150)  <span class="hljs-keyword">\Arc</span>[arrow,arrowpos=0.5,arrowlength=5,arrowwidth=2,arrowinset=0.2](85,20)(40,210,330)<span class="hljs-comment">%圆弧，中括号设置相应格式获得不同传播子的样式，最后两个括号设置的是圆心在画布上的位置、半径和起始弧度</span><br>    <span class="hljs-keyword">\Vertex</span>(50,0)&#123;2&#125;<span class="hljs-comment">%顶点，括号和花括号分别代表在画布上的位置和顶点大小的设置</span><br>    <span class="hljs-keyword">\Vertex</span>(120,0)&#123;2&#125;<br><span class="hljs-keyword">\end</span>&#123;axopicture&#125;<br></code></pre></td></tr></table></figure><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(128,128,128,.08);"     src="https://cdn.jsdelivr.net/gh/sophisli/picdomain/img/20210409200330.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">代码对应的AxoDraw2圈图和基本结构示意</div> </center><p><strong>Feynhand</strong></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;[baseline=(a.base)]<span class="hljs-comment">%TiKz的绘制环境</span><br><span class="hljs-keyword">\begin</span>&#123;feynhand&#125;<span class="hljs-comment">%Feynhand的绘制环境</span><br><span class="hljs-keyword">\vertex</span> [dot] (a) at (0,0)&#123;&#125;;<span class="hljs-comment">%定义顶点。其中中括号定义的是顶点的类型，（a）是给顶点标记，（0，0）是顶点的坐标位置，是相对位置。注意这里花括号的有无决定顶点的现时与否</span><br><span class="hljs-keyword">\vertex</span> [dot] (b) at (2,0) &#123;&#125;;<br><span class="hljs-keyword">\propag</span> [fer] (a) to [half left,edge label = <span class="hljs-built_in">$</span>k<span class="hljs-built_in">$</span>] (b);<span class="hljs-comment">%定义传播子。由于绘图的专一性，图形命令是高度定制的，中括号中可以定义传播子的类型以及各种属性，包括箭头方向以及矢量文字描述</span><br><span class="hljs-keyword">\propag</span> [anti fermion] (a) to [half right] (b);<br><span class="hljs-keyword">\end</span>&#123;feynhand&#125;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(128,128,128,.08);"     src="https://cdn.jsdelivr.net/gh/sophisli/picdomain/img/20210409203021.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">代码对应的Feynhand圈图</div> </center><p>很明显后者的语法更简洁，下面要介绍本文的重点即相应绘图的逻辑。</p><h2 id="AxoDraw2"><a href="#AxoDraw2" class="headerlink" title="AxoDraw2"></a>AxoDraw2</h2><p>AxoDraw2绘制费曼图的逻辑非常容易理解，它的定义环境类似于PythonGUI画布的概念，<code>\begin&#123;axopicture&#125;\end&#123;axopicture&#125;</code>定义的是一个绘制区域（画布），对应的绘制结构就是点和线，<code>\Vertex</code>和<code>\Line</code>，曲线的语法是<code>\Arc</code>，都为大写字母开头。因为是引用画布的概念，我们一般在画布环境下定义网格<code>\AxoGrid</code>，然后依据网格的位置进行作图。这里点和线指令只需要给定两点在网格上的坐标就能在画布上绘制对应的图，Arc的绘制同理，只不过条件上需要坐标和弧度的限制，<a href="http://ctan.math.illinois.edu/graphics/axodraw2/axodraw2-man.pdf">具体格式可以参看手册</a>。因为是画图制图的逻辑，所以AxoDraw2可以方便地使用可视化工具JaxoDraw。不过AxoDraw的痛点在于不能自适应的调节在数学环境中的位置（AxoDraw2 2016的手册给了一种自定义绘制单元的方法可以图像单元实现数学环境中的自适应对齐，但是步骤非常繁琐），虽然上手非常容易，但是对于复杂的费曼图绘制仍然是非常麻烦。</p><p>另外一点是，AxoDraw2要是想直接在PDFLaTex或者XeLaTex上实现图的渲染，还需要在调用axphelp这个脚本实现对.dvi到.ps文件的转换，因为AxoDraw就是基于对.dvi文件编译过程。这额外增加了编译的步骤。</p><h2 id="TiKz-Feynhand"><a href="#TiKz-Feynhand" class="headerlink" title="TiKz-Feynhand"></a>TiKz-Feynhand</h2><p>到目前为止，个人觉得TiKz-Feynhand是绘制费曼图的最佳解决方案。它的绘制指令基于TiKz绘制模块。总所周知，TiKz在LaTex上的绘图支持是十分完备强大的，也非常容易上手。实际上TiKz-Feynhand只是在TiKz-Feynman的基础上小小改进，后者由于受限于渲染引擎的使用，只能在LuaLaTex编译环境下才能实现，或者在其他编译环境中调用Lua的编译指令。所以TiKz-Feynman即便语法简单功能丰富，但使用场景不够友好，对于大多数期刊PDFLaTex的编译要求很难进行推广。Feynhand正是为了解决这一问题而诞生，虽然语法简洁程度上有所退让，但是依然非常容易入手，而且可以很方便地与Tex的数学环境相结合，个人以为真正解决了latex绘制费曼图的难题。</p><p>Feynhand的语法环境可以直接在TiKz的绘制环境<code>\begin&#123;tikzpicture&#125;\end&#123;tikzpicture&#125;</code>中使用，这种兼容性决定了TiKz绘制命令基本上都可以在Feynhand的绘制环境<code>\begin&#123;feynhand&#125;\end&#123;feynhand&#125;</code>下实现。由于是定制的格式，Feymhand的绘制逻辑不依赖于画布，而是存粹的根据个人需要给定坐标。设置的坐标是相对位置，而非AxoDraw设置画布的绝对位置。如此我们可以设定坐标原点的基础上根据正交坐标系随意确定费曼图绘制的区域。对于定制的费曼图顶点、费米线、玻色线等格式可以参看<a href="http://mirrors.ctan.org/graphics/pgf/contrib/tikz-feynhand/tikz-feynhand.userguide.pdf">Feynhand手册</a>，该项目是Max Dohse个人开发，目前基本上的费曼图都能实现，风格定制的选择目前还在开发中，但是现有的功能可以完全满足复杂费曼图的绘制。</p>]]></content>
    
    
    <categories>
      
      <category>Theoritical methods</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>初衷</title>
    <link href="/sophisli.github.io/2021/04/05/%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9D%E8%A1%B7/"/>
    <url>/sophisli.github.io/2021/04/05/%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9D%E8%A1%B7/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\sophisli.github.io\assets\css\APlayer.min.css"><script src="\sophisli.github.io\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\sophisli.github.io\assets\js\Meting.min.js"></script><h1 id="建立个人博客的初衷"><a href="#建立个人博客的初衷" class="headerlink" title="建立个人博客的初衷"></a>建立个人博客的初衷</h1><p>一直没有写博客的习惯，应该是没有认识到分享记录知识和经验的重要性。很长一段时间自己都是拿来主义，从互联网的知识分享中受益颇多。  应当抽出时间记录自己解决问题和习得的过程。秉承开源精神，是人性之光，我会在日后尽量更新自己在实践终生学习进程中的所思所想，与求知者一同进步。   </p><p>“我们不能根据躯体外貌这些肤浅的官能判断一个人，这并不是说不以貌取人，而是在提问我们如何定义一个确实的人。如果去回答，他需得在时间暴风的裹挟中不被摧毁，他的精神像质子一样稳定，并能永恒延续下去。</p><p>如果你害怕死亡，死亡便已降临。”</p><p>这个博客的建立参考了B站up主程序羊的<a href="https://www.bilibili.com/video/BV1Yb411a7ty">视频</a>，主题Fluid的选择在于艺术画廊的视觉效果</p><p>。。。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
